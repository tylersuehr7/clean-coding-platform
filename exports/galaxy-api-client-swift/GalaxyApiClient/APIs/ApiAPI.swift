//
// ApiAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ApiAPI {

    /**
     * enum for parameter format
     */
    public enum Format_apiSchemaRetrieve: String, CaseIterable {
        case json = "json"
        case yaml = "yaml"
    }

    /**
     * enum for parameter lang
     */
    public enum Lang_apiSchemaRetrieve: String, CaseIterable {
        case af = "af"
        case ar = "ar"
        case arDz = "ar-dz"
        case ast = "ast"
        case az = "az"
        case be = "be"
        case bg = "bg"
        case bn = "bn"
        case br = "br"
        case bs = "bs"
        case ca = "ca"
        case ckb = "ckb"
        case cs = "cs"
        case cy = "cy"
        case da = "da"
        case de = "de"
        case dsb = "dsb"
        case el = "el"
        case en = "en"
        case enAu = "en-au"
        case enGb = "en-gb"
        case eo = "eo"
        case es = "es"
        case esAr = "es-ar"
        case esCo = "es-co"
        case esMx = "es-mx"
        case esNi = "es-ni"
        case esVe = "es-ve"
        case et = "et"
        case eu = "eu"
        case fa = "fa"
        case fi = "fi"
        case fr = "fr"
        case fy = "fy"
        case ga = "ga"
        case gd = "gd"
        case gl = "gl"
        case he = "he"
        case hi = "hi"
        case hr = "hr"
        case hsb = "hsb"
        case hu = "hu"
        case hy = "hy"
        case ia = "ia"
        case id = "id"
        case ig = "ig"
        case io = "io"
        case _is = "is"
        case it = "it"
        case ja = "ja"
        case ka = "ka"
        case kab = "kab"
        case kk = "kk"
        case km = "km"
        case kn = "kn"
        case ko = "ko"
        case ky = "ky"
        case lb = "lb"
        case lt = "lt"
        case lv = "lv"
        case mk = "mk"
        case ml = "ml"
        case mn = "mn"
        case mr = "mr"
        case ms = "ms"
        case my = "my"
        case nb = "nb"
        case ne = "ne"
        case nl = "nl"
        case nn = "nn"
        case os = "os"
        case pa = "pa"
        case pl = "pl"
        case pt = "pt"
        case ptBr = "pt-br"
        case ro = "ro"
        case ru = "ru"
        case sk = "sk"
        case sl = "sl"
        case sq = "sq"
        case sr = "sr"
        case srLatn = "sr-latn"
        case sv = "sv"
        case sw = "sw"
        case ta = "ta"
        case te = "te"
        case tg = "tg"
        case th = "th"
        case tk = "tk"
        case tr = "tr"
        case tt = "tt"
        case udm = "udm"
        case uk = "uk"
        case ur = "ur"
        case uz = "uz"
        case vi = "vi"
        case zhHans = "zh-hans"
        case zhHant = "zh-hant"
    }

    /**

     - parameter format: (query)  (optional)
     - parameter lang: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiSchemaRetrieve(format: Format_apiSchemaRetrieve? = nil, lang: Lang_apiSchemaRetrieve? = nil, apiResponseQueue: DispatchQueue = GalaxyApiAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return apiSchemaRetrieveWithRequestBuilder(format: format, lang: lang).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/schema/
     - OpenApi3 schema for this API. Format can be selected via content negotiation.  - YAML: application/vnd.oai.openapi - JSON: application/vnd.oai.openapi+json
     - BASIC:
       - type: http
       - name: jwtAuth
     - parameter format: (query)  (optional)
     - parameter lang: (query)  (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func apiSchemaRetrieveWithRequestBuilder(format: Format_apiSchemaRetrieve? = nil, lang: Lang_apiSchemaRetrieve? = nil) -> RequestBuilder<AnyCodable> {
        let localVariablePath = "/api/schema/"
        let localVariableURLString = GalaxyApiAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "format": (wrappedValue: format?.encodeToJSON(), isExplode: true),
            "lang": (wrappedValue: lang?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = GalaxyApiAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
